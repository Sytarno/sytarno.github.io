{"version":3,"sources":["components/Landing/Landing.js","components/assets.js","components/Navigation/NavParent.js","components/Bio/Bio.js","App.js","reportWebVitals.js","index.js"],"names":["Slide","nightMode","setNightMode","animationRef","React","useRef","useEffect","current","anime","timeline","loop","add","targets","scale","opacity","translateZ","easing","duration","delay","Landing","useState","id","onClick","className","NightModeButton","NavButton","text","destination","href","to","smooth","NavParent","Bio","updateColors","root","document","documentElement","style","setProperty","particleParams","amount","size","particles","number","value","color","line_linked","enable","move","direction","out_mode","speed","App","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33ced9e0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Landing.css\";\r\nimport anime from 'animejs'\r\n\r\nimport { findRenderedDOMComponentWithClass } from \"react-dom/test-utils\";\r\n\r\nconst Slide = ({ nightMode, setNightMode }) => {\r\n  const animationRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    animationRef.current = anime.timeline({ loop: false }).add({\r\n      targets: \".l1\",\r\n      scale: [0, 1],\r\n      opacity: [0, 1],\r\n      translateZ: 0,\r\n      easing: \"easeOutExpo\",\r\n      duration: 4000,\r\n      delay: 100,\r\n    });\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nconst Landing = ({ nightMode, setNightMode }) => {\r\n  const [anim, toggle] = useState(1);\r\n  return (\r\n    <section id=\"landing-section\">\r\n      <div\r\n        onClick={() => setNightMode(!nightMode)}\r\n        id=\"main-title\"\r\n        className=\"text-center noselect\"\r\n      >\r\n        <h1 id=\"main-title-text\">Evan Nguyen</h1>\r\n        <span className=\"line l1\"></span>\r\n      </div>\r\n      <Slide nightMode={nightMode} setNightMode={setNightMode} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\n\r\nexport const NightModeButton = ({nightMode, setNightMode}) => {\r\n    return (\r\n      <div onClick = {()=>setNightMode(!nightMode)} className = \"nav-btn\">\r\n        <a className = \"night-btn nav-btn-text\">\r\n          Night\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n","import React, {useRef} from \"react\";\r\nimport \"./NavParent.css\";\r\nimport { NightModeButton } from \"../assets\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst NavButton = ({ text, destination }) => {\r\n  return (\r\n    <div className=\"nav-btn\">\r\n      {\r\n      <a\r\n        href={\"#\" + destination}\r\n        to={destination}\r\n        smooth={true}\r\n        className=\"nav-btn-text\"\r\n      >\r\n        {text}\r\n      </a>\r\n      }\r\n      \r\n      {/*\r\n      <Link\r\n        activeClass=\"active\"\r\n        to=\"bio\"\r\n        spy={true}\r\n        smooth={true}\r\n        className=\"nav-btn-text\"\r\n        offset={-70}\r\n        duration={500}\r\n      >\r\n        {text}\r\n      </Link>\r\n      */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NavParent = ({ nightMode, setNightMode }) => {\r\n  return (\r\n    <div className=\"nav-parent noselect\">\r\n      <NavButton text=\"Info\" destination=\"bio\" />\r\n      <NightModeButton nightMode={nightMode} setNightMode={setNightMode} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavParent;\r\n","import anime, { running } from \"animejs\";\r\nimport React from \"react\";\r\nimport \"./Bio.css\";\r\n\r\nfunction runAnim() {\r\n  anime({\r\n    targets: \".box l1\",\r\n    scale: [0, 1],\r\n    opacity: [0, 1],\r\n    translateZ: 0,\r\n    easing: \"easeOutExpo\",\r\n    duration: 4000,\r\n    delay: 100,\r\n  });\r\n}\r\n\r\nconst Bio = () => {\r\n  return (\r\n    <section id=\"bio\">\r\n      <div id=\"namespace\" className=\"text-center\">\r\n        How is this working?\r\n        <span className=\"box\"></span>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n","import React, { useState, useEffect } from \"react\";\nimport Particles from \"react-particles-js\";\n\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Landing from \"./components/Landing/Landing\";\nimport NavParent from \"./components/Navigation/NavParent\";\nimport Bio from \"./components/Bio/Bio\";\n\nimport \"./components/Landing/Landing.css\";\n\nimport \"./App.css\";\n\nvar nightMode = false;\n\nconst updateColors = () => {\n  let root = document.documentElement;\n  nightMode = !nightMode;\n\n  if (nightMode) {\n    root.style.setProperty(\"--main-bg-color\", \"#080705\");\n    root.style.setProperty(\"--main-text-color\", \"#EFF1F3\");\n  } else {\n    root.style.setProperty(\"--main-bg-color\", \"#EFF1F3\");\n    root.style.setProperty(\"--main-text-color\", \"#080705\");\n  }\n};\n\nconst particleParams = (nightMode, amount, size) => {\n  return {\n    particles: {\n      number: {\n        value: amount,\n      },\n      size: {\n        value: size,\n      },\n      color: {\n        value: nightMode ? \"#ffffff\" : \"#000000\",\n      },\n      line_linked: {\n        enable: false,\n      },\n      move: {\n        direction: \"bottom\",\n        out_mode: \"out\",\n        speed: 1,\n      },\n      opacity: {\n        value: 1,\n      },\n    },\n  };\n};\n\nexport default function App() {\n  const [nightMode, setNightMode] = useState(false);\n  useEffect(() => updateColors, [nightMode]);\n\n  return (\n    <>\n      <div id=\"root\">\n        <div className=\"parallax\">\n          <div className=\"parallax__layer parallax__layer--back\">\n            <Particles params={particleParams(nightMode, 20, 2)} />\n          </div>\n          <div className=\"parallax__layer parallax__layer--middle\">\n            <Particles params={particleParams(nightMode, 20, 2)} />\n          </div>\n          <div className=\"parallax__layer parallax__layer--front\">\n            <Particles params={particleParams(nightMode, 20, 2)} />\n\n            <Landing nightMode={nightMode} setNightMode={setNightMode} />\n            <Bio></Bio>\n            <NavParent nightMode={nightMode} setNightMode={setNightMode} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n/*\nexport default function App() {\n  const [nightMode, setNightMode] = useState(false);\n  useEffect(() => updateColors, [nightMode]);\n\n  return (\n    <>\n      <div id=\"root\">\n        <div className = \"parallax\">\n          <Particles params={particleParams(nightMode, 10, 2)} />\n\n          <Landing nightMode={nightMode} setNightMode={setNightMode} />\n          <Bio></Bio>\n          <NavParent nightMode={nightMode} setNightMode={setNightMode} />\n          </div>\n      </div>\n    </>\n  );\n}\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import bootstrap css\nimport './styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}