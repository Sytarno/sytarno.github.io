{"version":3,"sources":["components/Landing/src-Landing.js","components/main-assets.js","components/Navigation/src-NavParent.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","nightMode","setNightMode","useState","id","onClick","className","params","particles","color","value","line_linked","enable","move","direction","speed","opacity","anim","NightModeButton","NavButton","text","destination","href","NavParent","updateColors","root","document","documentElement","style","setProperty","App","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iRAmDeA,G,OA7CC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAAkB,EACtBC,mBAAS,GADa,6BAE7C,OACE,0BAASC,GAAG,kBAAZ,UAUE,oBACEC,QAAS,kBAAIH,GAAcD,IAC3BG,GAAG,aACHE,UAAU,uBAHZ,yBAOA,cAAC,IAAD,CACEC,OAAQ,CACNC,UAAW,CACTC,MAAO,CACLC,MAAOT,EAAY,UAAY,WAEjCU,YAAa,CACXC,QAAQ,GAEVC,KAAM,CACJC,UAAW,SACXC,MAAO,IAETC,QAAS,CACPC,KAAM,CACJP,MAAO,aCvCVQ,G,OAAkB,SAAC,GAA+B,IAA9BjB,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACxC,OACE,qBAAKG,QAAW,kBAAIH,GAAcD,IAAYK,UAAY,UAA1D,SACE,mBAAGA,UAAY,yBAAf,uBCDFa,EAAY,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACxB,OACE,qBAAKf,UAAU,UAAf,SACI,mBAAGgB,KAAQ,IAAID,EAAaf,UAAU,eAAtC,SACCc,OAeMG,EATG,SAAC,GAA+B,IAA9BtB,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAC7B,OACE,sBAAKI,UAAY,sBAAjB,UACE,cAAC,EAAD,CAAWc,KAAO,OAAOC,YAAc,iBACvC,cAAC,EAAD,CAAiBpB,UAAaA,EAAWC,aAAgBA,QCX3DD,G,QAAa,GAEXuB,EAAe,WACnB,IAAIC,EAAOC,SAASC,iBACpB1B,GAAaA,IAGXwB,EAAKG,MAAMC,YAAY,kBAAmB,WAC1CJ,EAAKG,MAAMC,YAAY,oBAAqB,aAE5CJ,EAAKG,MAAMC,YAAY,kBAAmB,WAC1CJ,EAAKG,MAAMC,YAAY,oBAAqB,aAIjC,SAASC,IAAO,IAAD,EACM3B,oBAAS,GADf,mBACrBF,EADqB,KACVC,EADU,KAI5B,OAFA6B,qBAAU,kBAAIP,IAAc,CAACvB,IAG7B,mCACE,sBAAKG,GAAG,OAAR,UACE,cAAC,EAAD,CAAWH,UAAaA,EAAWC,aAAgBA,IACnD,cAAC,EAAD,CAASD,UAAaA,EAAWC,aAAgBA,SC9BvD,IAYe8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BZ,K","file":"static/js/main.82f6038e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./src-Landing.css\";\r\n\r\nimport Particles from \"react-particles-js\";\r\nimport { findRenderedDOMComponentWithClass } from \"react-dom/test-utils\";\r\n\r\nconst Landing = ({nightMode, setNightMode}) => {\r\n  const [anim, toggle] = useState(0);\r\n  return (\r\n    <section id=\"landing-section\">\r\n      {/*\r\n      <div\r\n        onClick={() => {toggle(1); updateColors();}}\r\n        onAnimationEnd={() => toggle(0)}\r\n        className=\"text-center noselect\"\r\n      >\r\n        <div anim={anim} id=\"vertical-strip\"></div>\r\n        </div>\r\n      */}\r\n      <h1\r\n        onClick={()=>setNightMode(!nightMode)}\r\n        id=\"main-title\"\r\n        className=\"text-center noselect\"\r\n      >\r\n        Evan Nguyen\r\n      </h1>\r\n      <Particles\r\n        params={{\r\n          particles: {\r\n            color: {\r\n              value: nightMode ? \"#ffffff\" : \"#000000\",\r\n            },\r\n            line_linked: {\r\n              enable: false,\r\n            },\r\n            move: {\r\n              direction: \"bottom\",\r\n              speed: 0.4,\r\n            },\r\n            opacity: {\r\n              anim: {\r\n                value: 1\r\n              }\r\n            }\r\n          },\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\n\r\nexport const NightModeButton = ({nightMode, setNightMode}) => {\r\n    return (\r\n      <div onClick = {()=>setNightMode(!nightMode)} className = \"nav-btn\">\r\n        <a className = \"night-btn nav-btn-text\">\r\n          Night\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n","import React from \"react\";\r\nimport \"./src-NavParent.css\";\r\nimport {NightModeButton} from \"../main-assets.js\";\r\n\r\nconst NavButton = ({text, destination}) => {\r\n  return (\r\n    <div className=\"nav-btn\">\r\n        <a href = {\"#\"+destination} className=\"nav-btn-text\">\r\n        {text}\r\n        </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NavParent = ({nightMode, setNightMode}) => {\r\n  return (\r\n    <div className = \"nav-parent noselect\"> \r\n      <NavButton text = \"Info\" destination = \"info-section\"/>\r\n      <NightModeButton nightMode = {nightMode} setNightMode = {setNightMode}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavParent;\r\n","import React, {useState, useEffect} from \"react\";\n\nimport Landing from \"./components/Landing/src-Landing\";\nimport NavParent from \"./components/Navigation/src-NavParent\";\n\nimport \"./App.css\";\n\nvar nightMode  = false;\n\nconst updateColors = () =>{\n  let root = document.documentElement;\n  nightMode = !nightMode;\n\n  if(nightMode){\n    root.style.setProperty(\"--main-bg-color\", \"#080705\");\n    root.style.setProperty(\"--main-text-color\", \"#EFF1F3\");\n  }else{\n    root.style.setProperty(\"--main-bg-color\", \"#EFF1F3\");\n    root.style.setProperty(\"--main-text-color\", \"#080705\");\n  }\n}\n\nexport default function App() {\n  const [nightMode, setNightMode] = useState(false);\n  useEffect(()=>updateColors, [nightMode])\n\n  return (\n  <>\n    <div id=\"root\">\n      <NavParent nightMode = {nightMode} setNightMode = {setNightMode}/>\n      <Landing nightMode = {nightMode} setNightMode = {setNightMode}/>\n    </div>\n  </>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import bootstrap css\nimport './styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}