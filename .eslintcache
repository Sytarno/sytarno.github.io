[{"D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\index.js":"1","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\reportWebVitals.js":"2","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\App.js":"3","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\Landing\\Landing.js":"4","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\Navigation\\NavParent.js":"5","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\assets.js":"6","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\Bio\\Bio.js":"7"},{"size":546,"mtime":1607635410715,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":962,"mtime":1620464386004,"results":"11","hashOfConfig":"9"},{"size":2691,"mtime":1620465894463,"results":"12","hashOfConfig":"9"},{"size":610,"mtime":1620463977274,"results":"13","hashOfConfig":"9"},{"size":293,"mtime":1620463640775,"results":"14","hashOfConfig":"9"},{"size":242,"mtime":1620464421220,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dv9xd0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\index.js",[],["33","34"],"D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\reportWebVitals.js",[],"D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\App.js",[],"D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\Landing\\Landing.js",["35","36","37","38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Landing.css\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\n\r\nimport Particles from \"react-particles-js\";\r\nimport { findRenderedDOMComponentWithClass } from \"react-dom/test-utils\";\r\n\r\nconst particleParams = (nightMode) => {\r\n  return {\r\n    particles: {\r\n      size: {\r\n        value: 1 * (0.2, 0.5, 0.8, 1),\r\n      },\r\n      color: {\r\n        value: nightMode ? \"#ffffff\" : \"#000000\",\r\n      },\r\n      line_linked: {\r\n        enable: false,\r\n      },\r\n      move: {\r\n        direction: \"bottom\",\r\n        speed: 0.5,\r\n      },\r\n      opacity: {\r\n        value: 1,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nconst Anim = ({ nightMode, setNightMode }) => {\r\n  const animationRef = React.useRef(null);\r\n  const [active, setActive] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    animationRef.current = anime.timeline({ loop: false }).add({\r\n      targets: \".l1\",\r\n      scale: [0, 1],\r\n      opacity: [0, 1],\r\n      translateZ: 0,\r\n      easing: \"easeOutExpo\",\r\n      duration: 4000,\r\n      delay: 100,\r\n    });\r\n  });\r\n\r\n  const toggleNight = () => {\r\n    if (active) {\r\n      setNightMode(!nightMode);\r\n      //setActive(false);\r\n      //setTimeout(() => setActive(true), 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={() => toggleNight()}\r\n      id=\"main-title\"\r\n      className=\"text-center noselect\"\r\n    >\r\n      <h1 id=\"main-title-text\">Evan Nguyen</h1>\r\n      <span class=\"line l1\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Landing = ({ nightMode, setNightMode }) => {\r\n  const [anim, toggle] = useState(1);\r\n /*\r\n  React.useEffect(() => window.addEventListener(\"scroll\", listenToScroll), []);\r\n  \r\n  const listenToScroll = () => {\r\n    const winScroll =\r\n      document.body.scrollTop || document.documentElement.scrollTop;\r\n\r\n    const height =\r\n      document.documentElement.scrollHeight -\r\n      document.documentElement.clientHeight;\r\n\r\n    const scrolled = 200 * (winScroll / height);\r\n    const threshold = 100;\r\n    if (scrolled > threshold) {\r\n      document\r\n        .getElementById(\"main-title\")\r\n        .style.setProperty(\"position\", \"absolute\");\r\n        document\r\n        .getElementById(\"main-title\")\r\n        .style.setProperty(\"top\", \"130vh\")\r\n    } else {\r\n      document\r\n        .getElementById(\"main-title\")\r\n        .style.setProperty(\"position\", \"fixed\");\r\n      document\r\n        .getElementById(\"main-title\")\r\n        .style.setProperty(\"top\", \"40%\")\r\n    }\r\n  };\r\n*/\r\n  return (\r\n    <section id=\"landing-section\">\r\n      <Anim nightMode={nightMode} setNightMode={setNightMode} />\r\n      <Particles params={particleParams(nightMode)} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\Navigation\\NavParent.js",[],"D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\assets.js",["40"],"import React from \"react\";\r\n\r\nexport const NightModeButton = ({nightMode, setNightMode}) => {\r\n    return (\r\n      <div onClick = {()=>setNightMode(!nightMode)} className = \"nav-btn\">\r\n        <a className = \"night-btn nav-btn-text\">\r\n          Night\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n","D:\\DEFAULT BASE\\Documents\\GitHub\\sytarno.github.io\\src\\components\\Bio\\Bio.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"49","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":43},{"ruleId":"45","severity":1,"message":"50","line":33,"column":18,"nodeType":"47","messageId":"48","endLine":33,"endColumn":27},{"ruleId":"45","severity":1,"message":"51","line":68,"column":10,"nodeType":"47","messageId":"48","endLine":68,"endColumn":14},{"ruleId":"45","severity":1,"message":"52","line":68,"column":16,"nodeType":"47","messageId":"48","endLine":68,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":6,"column":9,"nodeType":"55","endLine":6,"endColumn":49},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'findRenderedDOMComponentWithClass' is defined but never used.","'setActive' is assigned a value but never used.","'anim' is assigned a value but never used.","'toggle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]